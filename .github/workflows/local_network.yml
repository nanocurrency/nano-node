name: 6node local network

on: [push, pull_request]
jobs:

  linux_local_network:
    name: Linux Local Network
    timeout-minutes: 90 
    #runs-on: ubuntu-20.04
    runs-on: self-hosted
    steps:
      - name: Checkout nano-node
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #v3.1.0
        with:
          submodules: "recursive"
      - name: Build nano_node
        run: docker build -f docker/node/Dockerfile -t nano_node_cdci .
      - name: Check nano-speed-testsuite
        #uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #v3.1.0
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          repository: gr0vity-dev/nano-speed-testsuite
          token: ${{ secrets.SPEED_TESTSUITE }}
          ref: nanolocal_cdci
          #lfs: true 
      # - name: DEBUG run specific docker version
      #   run: sed -i 's/nano_node_cdci/nanocurrency\/nano:V24.0RC1/g' testcases/nanolocal/run/*.json    
      - name: Setup python venv
        run: ./setup_python_venv.sh
      - name: Run 6node_bintree_100k
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_bintree_100k.json
      - name: Run 6node_change_100k
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_change_100k.json
      - name: Run 6node_dependant_sends
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_dependant_sends.json
      - name: Run 6node_independant_sends
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_independant_sends.json
      - name: Run 6node_tc1_change
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_tc1_change.json
      - name: Run 6node_tc2_bintree
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_tc2_bintree.json
      - name: Run 6node_tc3_change_desync
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_tc3_change_desync.json
      - name: Run 6node_tc4_independant_sends
        run: ./ns_testsuite_run.py testcases/nanolocal/run/6node_tc4_independant_sends.json
      - name: query_testcases_all_rows
        run: ./venv_bnano_testsuite/bin/python3 -c "from sql.query_testcase import NanoSqlQuery; print(NanoSqlQuery().query_testcases_all_rows())"
      - name: query_testcases_detail
        run: ./venv_bnano_testsuite/bin/python3 -c "from sql.query_testcase import NanoSqlQuery; print(NanoSqlQuery().query_testcases_detail())"
      - name: query_status_by_testid
        run: ./venv_bnano_testsuite/bin/python3 -c "from sql.query_testcase import NanoSqlQuery; print(NanoSqlQuery().query_status_by_testid())"
      - name: Destroy local network
        run: ./nl_run.py destroy
      - name: PASS or FAIL
        run: |
          export T_STATUS=$(./venv_bnano_testsuite/bin/python3 -c "from sql.query_testcase import NanoSqlQuery; print(NanoSqlQuery().query_suite_status())") && \
          if [ $T_STATUS = 'FAIL' ]; then exit 1; else exit 0; fi